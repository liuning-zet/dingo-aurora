---
- name: Kubernetes Apps | Wait for kube-apiserver
  uri:
    url: "{{ kube_apiserver_endpoint }}/healthz"
    validate_certs: false
    client_cert: "{{ kube_apiserver_client_cert }}"
    client_key: "{{ kube_apiserver_client_key }}"
  register: result
  until: result.status == 200
  retries: 10
  delay: 6
  when:
    - not (hosted_k8s | default(false))
    - inventory_hostname == groups['kube_control_plane'][0]

# 托管版K8s：检查集群连接性
- name: Hosted K8s | Check cluster connectivity
  command: "{{ kubectl }} get nodes --request-timeout=10s"
  environment:
    KUBECONFIG: "{{ tenant_cluster_kubeconfig }}"
  register: result
  until: result.rc == 0
  retries: 10
  delay: 6
  delegate_to: localhost
  when:
    - hosted_k8s | default(false)
    - tenant_cluster_kubeconfig is defined

- name: Set role node label to empty list
  set_fact:
    role_node_labels: []

- name: Node label for nvidia GPU nodes
  set_fact:
    role_node_labels: "{{ role_node_labels + ['nvidia.com/gpu=true'] }}"
  when:
    - nvidia_gpu_nodes is defined
    - nvidia_accelerator_enabled | bool
    - inventory_hostname in nvidia_gpu_nodes

- name: Set inventory node label to empty list
  set_fact:
    inventory_node_labels: []

- name: Populate inventory node label
  set_fact:
    inventory_node_labels: "{{ inventory_node_labels + ['%s=%s' | format(item.key, item.value)] }}"
  loop: "{{ node_labels | d({}) | dict2items }}"
  when:
    - node_labels is defined
    - node_labels is mapping

- debug:  # noqa name[missing]
    var: role_node_labels
- debug:  # noqa name[missing]
    var: inventory_node_labels

- name: Set label to node
  command: >-
      {{ kubectl }} label node {% if kube_override_hostname %}{{ kube_override_hostname }}{% else %}{{ inventory_hostname }}{% endif %} {{ item }} --overwrite=true
  loop: "{{ role_node_labels + inventory_node_labels }}"
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  changed_when: false
  when:
    - not (hosted_k8s | default(false))

# 托管版K8s：在本地执行节点设置标签
- name: Set label to node (Hosted K8s)
  command: >-
      {{ kubectl }} label node {% if kube_override_hostname %}{{ kube_override_hostname }}{% else %}{{ inventory_hostname }}{% endif %} {{ item }} --overwrite=true
  loop: "{{ role_node_labels + inventory_node_labels }}"
  environment:
    KUBECONFIG: "{{ tenant_cluster_kubeconfig }}"
  delegate_to: localhost
  changed_when: false
  when:
    - hosted_k8s | default(false)
    - tenant_cluster_kubeconfig is defined
...

